public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
    	List<List<Integer>> result=new ArrayList<List<Integer>>();
    	levelHelper(result,root,0);
    	if(result.size()<=1){
    		return result;
    	}else{
    		List<List<Integer>> result1=new ArrayList<List<Integer>>();
    		for(int i=result.size()-1;i>=0;i--){
    			result1.add(result.get(i));
    		}
    		return result1;
    	}
    	
    	
    }
    
    private void levelHelper(List<List<Integer>> result,TreeNode root,int height){
    	if(root==null)return;
    	if(height>=result.size()){
    		result.add(new LinkedList<Integer>());
    	}
    	result.get(height).add(root.val);
    	levelHelper(result,root.left,height+1);
    	levelHelper(result,root.right,height+1);
    }
    
    
    
    public class TreeNode {
    	 int val;
    	 TreeNode left;
    	 TreeNode right;
    	 TreeNode(int x) { val = x; }
    	 }
}
